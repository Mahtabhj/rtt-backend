# Generated by Django 3.1.1 on 2021-09-07 11:08

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('rttorganization', '0009_auto_20210810_0658'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExternalLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=500)),
            ],
            options={
                'verbose_name_plural': 'External Links',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='PrioritizationStrategy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=500)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prioritization_strategy_organization', to='rttorganization.organization')),
            ],
            options={
                'verbose_name_plural': 'Prioritization strategies',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=500)),
                ('short_name', models.CharField(blank=True, max_length=500, null=True)),
                ('url_link', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Properties',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='PropertyDataPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=500)),
                ('short_name', models.CharField(max_length=500)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='property_data_property', to='rttsubstance.property')),
            ],
            options={
                'verbose_name_plural': 'Property data point',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Substance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=500)),
                ('ec_no', models.CharField(max_length=500)),
                ('cas_no', models.CharField(max_length=500)),
                ('molecular_formula', models.TextField(blank=True, null=True)),
                ('chemycal_id', models.TextField(blank=True, null=True)),
                ('image', models.FileField(blank=True, null=True, upload_to='media/substance')),
            ],
            options={
                'verbose_name_plural': 'Substances',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='SubstanceUsesAndApplication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=500)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='substance_use_and_application_organization', to='rttorganization.organization')),
                ('substances', models.ManyToManyField(blank=True, related_name='uses_and_application_substances', to='rttsubstance.Substance')),
            ],
            options={
                'verbose_name_plural': 'Substance Uses and Applications',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='SubstancePropertyDataPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('value', models.CharField(max_length=500)),
                ('image', models.FileField(blank=True, null=True, upload_to='media/substance_property_data_point')),
                ('property_data_point', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rttsubstance.propertydatapoint')),
                ('substance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='substance_property_data_point_relation', to='rttsubstance.substance')),
            ],
            options={
                'verbose_name_plural': 'Substance Property data point',
                'db_table': 'rttsubstance_substance_property_data_points',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='SubstanceExternalLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('value', models.TextField(blank=True, null=True)),
                ('external_link', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rttsubstance.externallink')),
                ('substance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='substance_external_link_relation', to='rttsubstance.substance')),
            ],
            options={
                'verbose_name_plural': 'Substance External Links',
                'db_table': 'rttsubstance_substance_external_links',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='PrioritizationStrategyProperty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('weight', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('prioritization_strategy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rttsubstance.prioritizationstrategy')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prioritization_strategy_property_relation', to='rttsubstance.property')),
            ],
            options={
                'verbose_name_plural': 'Prioritization strategy Properties',
                'db_table': 'rttsubstance_prioritizationstrategy_properties',
                'ordering': ('-id',),
            },
        ),
        migrations.AddField(
            model_name='prioritizationstrategy',
            name='properties',
            field=models.ManyToManyField(blank=True, related_name='prioritization_strategy_properties', through='rttsubstance.PrioritizationStrategyProperty', to='rttsubstance.Property'),
        ),
        migrations.AddConstraint(
            model_name='substancepropertydatapoint',
            constraint=models.UniqueConstraint(fields=('substance', 'property_data_point'), name='unique_substance_property_data_point'),
        ),
        migrations.AddConstraint(
            model_name='substanceexternallink',
            constraint=models.UniqueConstraint(fields=('substance', 'external_link'), name='unique_substance_external_link'),
        ),
        migrations.AddConstraint(
            model_name='prioritizationstrategyproperty',
            constraint=models.UniqueConstraint(fields=('prioritization_strategy', 'property'), name='unique_prioritization_strategy_property'),
        ),
    ]
