"""
Django settings for rtt project.

Generated by 'django-admin startproject' using Django 3.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import datetime
import os
from pathlib import Path

import environ
from celery.schedules import crontab

# from rtt.aws.conf import *  # noqa

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

env = environ.Env()
env.read_env(env_file=os.path.join(BASE_DIR, '.env'))

RTT_ADMIN_DIR = os.path.join(os.path.dirname(BASE_DIR), 'rtt/rttadmin')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env.str('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool('DEBUG', default=False)
SERVER_STATE = env.str('SERVER_STATE', default='stag')

ALLOWED_HOSTS = ['*']

CORS_ORIGIN_ALLOW_ALL = True

# CORS_ORIGIN_WHITELIST = env.str('CORS_ORIGIN_WHITELIST').split(' ')

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_elasticsearch_dsl',
    'django_filters',
    'rest_framework',
    'corsheaders',
    'drf_yasg',
    'rttadmin',
    'rttauth',
    'rttcore',
    'rttdocument',
    'rttnews',
    'rttorganization',
    'rttproduct',
    'rttregulation',
    'storages',
    'django_celery_beat',
    'django_celery_results',
    'rttnotification',
    'rttsubstance',
    'rttlimitManagement',
    'rttpublicApi',
    'rtttaskManagement',
    'rttdocumentManagement',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'rttauth.middleware.public_api.PublicAPIAuthenticationMiddleware'
]

ROOT_URLCONF = 'rtt.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'rtt.wsgi.application'

# Database

DATABASES = {
    'default': env.db() if env.str('DATABASE_URL', default='') else env.db('SQLITE_URL',
                                                                           default='sqlite:///db.sqlite3')
}

# Password validation

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTH_USER_MODEL = "rttauth.User"

SWAGGER_SETTINGS = {
    'SECURITY_DEFINITIONS': {
        'Basic': {
            'type': 'basic'
        },
        'Bearer': {
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header'
        }
    }
}
# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# APPEND_SLASH = True
DATA_UPLOAD_MAX_NUMBER_FIELDS = 10000
REACT_APP_DIR = os.path.join(BASE_DIR, 'rttadmin')

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(os.path.dirname(BASE_DIR), 'static')

STATICFILES_DIRS = [
    os.path.join(REACT_APP_DIR, 'build', 'static'),
    os.path.join(REACT_APP_DIR, 'build', 'css'),
    os.path.join(REACT_APP_DIR, 'build', 'media')
]

REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rttcore.views.views.DefaultResultsSetPagination',
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],
    'EXCEPTION_HANDLER': 'rttcore.views.views.custom_exception_handler',
    'NON_FIELD_ERRORS_KEY': 'error',
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
        # "rest_framework.authentication.SessionAuthentication",
    )
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': datetime.timedelta(hours=10),
    'REFRESH_TOKEN_LIFETIME': datetime.timedelta(days=1),
}

ELASTICSEARCH_DSL = {
    'default': {
        'hosts': env.str('ELASTICSEARCH_URL', default='localhost:9200')
    },
}
if SERVER_STATE.lower() != 'local':
    ELASTICSEARCH_DSL_SIGNAL_PROCESSOR = 'rttcore.services.elasticsearch_service.CelerySignalProcessor'

# Celery config
CELERY_TIMEZONE = TIME_ZONE
CELERY_BROKER_URL = env.str('CELERY_BROKER_URL',default='')
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TASK_TIME_LIMIT = 60 * 60
CELERY_CACHE_BACKEND = 'django-cache'
CELERY_RESULT_BACKEND = 'django-db'
CELERY_BEAT_SCHEDULER = "django_celery_beat.schedulers:DatabaseScheduler"
BROKER_TRANSPORT_OPTIONS = {
                            'region': 'eu-west-1',
                            'visibility_timeout': 43200,
                            'polling_interval': 3,
                            'queue_name_prefix': 'queue-'
                            }
CELERY_DEFAULT_QUEUE = 'queue-%s' % SERVER_STATE.lower()
CELERY_ES_QUEUE = 'queue-es-%s' % SERVER_STATE.lower()

# Dot Net chemycal api config
CHEMICAL_CLIENT_NAME = env.str('CHEMICAL_CLIENT_NAME', default='rtt_app')
CHEMICAL_CLIENT_ID = env.str('CHEMICAL_CLIENT_ID', default='defc0d2e-2d7f-404b-8e21-0379a386442d')
CHEMICAL_BASE_URL = env.str('CHEMICAL_BASE_URL',
                            default='http://18.203.2.71/api/')

EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = env.str('EMAIL_HOST_USER', default='rtttestemail@gmail.com')
EMAIL_HOST_PASSWORD = env.str('EMAIL_HOST_PASSWORD', default='RttTestEmail')
EMAIL_PORT = 587
EMAIL_USE_TLS = True
DEFAULT_FROM_EMAIL = env.str('DEFAULT_FROM_EMAIL', default='rtttestemail@gmail.com')

# Mailjet config
MAILJET_API_KEY = env.str('MAILJET_API_KEY', default='')
MAILJET_API_SECRET = env.str('MAILJET_API_SECRET', default='')
MAILJET_FROM_EMAIL = env.str('MAILJET_FROM_EMAIL', default='no-reply@chemycal.com')
MAILJET_FROM_EMAIL_NAME = env.str('MAILJET_FROM_EMAIL_NAME', default='Chemycal')
MAILJET_RESET_PASSWORD_TEMPLATE_ID = env.str('MAILJET_RESET_PASSWORD_TEMPLATE_ID', default=2580143)
MAILJET_SEND_INVITATION_TEMPLATE_ID = env.str('MAILJET_SEND_INVITATION_TEMPLATE_ID', default=2587720)
MAILJET_TASK_CREATE_NOTIFICATION_TEMPLATE_ID = env.str('MAILJET_TASK_CREATE_NOTIFICATION_TEMPLATE_ID', default=3625555)
MAILJET_TASK_UPDATE_NOTIFICATION_TEMPLATE_ID = env.str('MAILJET_TASK_UPDATE_NOTIFICATION_TEMPLATE_ID', default=3625687)
MAILJET_CHEMICAL_NEWS_API_FAILING_NOTIFICATION_TEMPLATE_ID = env.str(
    'MAILJET_CHEMICAL_NEWS_API_FAILING_NOTIFICATION_TEMPLATE_ID', default=3693813)
MAILJET_NEWS_EMAIL_NOTIFICATION_TEMPLATE_ID = env.str('MAILJET_NEWS_EMAIL_NOTIFICATION_TEMPLATE_ID', default=3036077)
MAILJET_REGULATORY_UPDATES_EMAIL_NOTIFICATION_TEMPLATE_ID = env.str(
    'MAILJET_REGULATORY_UPDATES_EMAIL_NOTIFICATION_TEMPLATE_ID', default=3040767)
MAILJET_ASSESSMENTS_EMAIL_NOTIFICATION_TEMPLATE_ID = env.str('MAILJET_ASSESSMENTS_EMAIL_NOTIFICATION_TEMPLATE_ID',
                                                             default=3036079)
MAILJET_SUBSTANCE_ADD_REPORT_TEMPLATE_ID = env.str('MAILJET_SUBSTANCE_ADD_REPORT_TEMPLATE_ID', default=3784112)
MAILJET_EXEMPTION_ADD_REPORT_TEMPLATE_ID = env.str('MAILJET_EXEMPTION_ADD_REPORT_TEMPLATE_ID', default=3893990)
MAILJET_LIMIT_WITH_ADDITIONAL_ATTRIBUTE_VALUE_UPLOAD_TEMPLATE_ID = env.str(
    'MAILJET_LIMIT_WITH_ADDITIONAL_ATTRIBUTE_VALUE_UPLOAD_TEMPLATE_ID', default=3985532)
MAILJET_LIMIT_EMAIL_NOTIFICATION_TEMPLATE_ID = env.str('MAILJET_LIMIT_EMAIL_NOTIFICATION_TEMPLATE_ID', default=4156191)
MAILJET_SUBSTANCE_REGULATION_EMAIL_NOTIFICATION_TEMPLATE_ID = env.str(
    'MAILJET_SUBSTANCE_REGULATION_EMAIL_NOTIFICATION_TEMPLATE_ID', default=4156145)
MAILJET_REVIEW_NEWS_NOTIFICATION_TEMPLATE_ID = env.str('MAILJET_REVIEW_NEWS_NOTIFICATION_TEMPLATE_ID', default=4234699)
MAILJET_SUBSTANCE_DATA_UPLOAD_REPORT_TEMPLATE_ID = env.str(
    'MAILJET_SUBSTANCE_DATA_UPLOAD_REPORT_TEMPLATE_ID', default=4194419)
MAILJET_PRODUCTS_RELATED_SUBSTANCE_ADD_REPORT_TEMPLATE_ID = env.str(
    'MAILJET_PRODUCTS_RELATED_SUBSTANCE_ADD_REPORT_TEMPLATE_ID', default=4329334)
MAILJET_SUBSTANCE_FAMILY_UPLOAD_TEMPLATE_ID = env.str('MAILJET_SUBSTANCE_FAMILY_UPLOAD_TEMPLATE_ID', default=4260264)
MAILJET_DOC_MANAGEMENT_NOTIFICATION_TEMPLATE_ID = env.str('DOC_MANAGEMENT_NOTIFICATION_TEMPLATE_ID', default=4691069)
MAILJET_DOC_COMMENT_NOTIFICATION_TEMPLATE_ID = env.str('DOC_COMMENT_NOTIFICATION_TEMPLATE_ID', default=4691082)

# AWS configs
AWS_ACCESS_KEY_ID = env.str('AWS_ACCESS_KEY_ID', default='None')
AWS_SECRET_ACCESS_KEY = env.str("AWS_SECRET_ACCESS_KEY", default='None')
AWS_FILE_EXPIRE = 200
AWS_PRELOAD_METADATA = True
AWS_QUERYSTRING_AUTH = True
AWS_QUERYSTRING_EXPIRE = 365 * 24 * 60 * 60

DEFAULT_FILE_STORAGE = 'rtt.aws.utils.MediaRootS3BotoStorage'
AWS_STORAGE_BUCKET_NAME = env.str('AWS_STORAGE_BUCKET_NAME')
S3DIRECT_REGION = 'us-west-1'
S3_URL = '//%s.s3.amazonaws.com/' % AWS_STORAGE_BUCKET_NAME
MEDIA_URL = '//%s.s3.amazonaws.com/media/' % AWS_STORAGE_BUCKET_NAME

MEDIA_ROOT = MEDIA_URL

two_months = datetime.timedelta(days=61)
date_two_months_later = datetime.date.today() + two_months
expires = date_two_months_later.strftime("%A, %d %B %Y 20:00:00 GMT")

AWS_HEADERS = {
    'Expires': expires,
    'Cache-Control': 'max-age=%d' % (int(two_months.total_seconds()),),
}

SITE_BASE_URL = env.str('SITE_BASE_URL', default='https://rtt-test.chemycal.com/')

# cache timeout in seconds
DJANGO_CACHE_TIMEOUT = 60*10

FILE_UPLOAD_MAX_MEMORY_SIZE = 20 * 1024 * 1024
