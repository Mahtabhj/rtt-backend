Dependencies:

    sudo apt-get update
    sudo pip install --upgrade pip
    sudo pip install --upgrade virtualenv
    git clone https://{user_name}@bitbucket.org/chemycal/rtt-backend.git

How to setup:
    cd rtt-backend
    virtualenv venv
    source venv/bin/activate
    pip install -r requirements.txt
    cd rtt/rttadmin
    npm install  # requires node v12.18.4
    npm run build # For production build
    npm run build:local  # For local build

    cd ..
    create .env file from example.env file
    python manage.py migrate
    python manage.py createsuperuser # give it user/pass, and remember. username and email should have same value.

    python manage.py collectstatic

    python manage.py runserver 0.0.0.0:8080

How to run next time:
    cd rtt-backend
    source venv/bin/activate
    pip install -r requirements.txt

    cd rtt/rttadmin
    npm install  # requires node v12.18.4
    npm run build # For production build
    npm run build:local  # For local build

    cd ..
    python manage.py collectstatic
    python manage.py runserver 0.0.0.0:8080


How to run Admin Frontend Development mode:

    cd rtt-backend/rtt/rttadmin
    npm run start


How to run using docker:

    Nevigate to rtt-frontend folder and open ngix.config file.

    Make sure your proxy pass like this: proxy_pass http://rtt-backend:8000;

    Or replace the content with given code:

    server {
        listen 80;

        location /site-alive {
            return 200 'site-alive!';
            add_header Content-Type text/plain;
        }

        location /static/ {
        autoindex on;
        alias /rtt-backend-app/static/;
        }

        location /backend {
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_buffers 16 64k;
            proxy_buffer_size 128k;
            add_header Host $host;
            include       /etc/nginx/mime.types;

            proxy_read_timeout 600s;
            client_max_body_size 100m;

            #proxy_pass http://127.0.0.1:8000;
            proxy_pass http://rtt-backend:8000;

            # Add HTTP Strict Transport Security for good measure.
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains;";
        }

        location / {
            proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Host $http_host;
                proxy_buffers 16 64k;
                proxy_buffer_size 128k;
            

            root /usr/share/nginx/html;

            #root /var/www/html;
            index index.html;
            try_files $uri /index.html =404;
        }
    }

    Run docker build -t rtt-frontend .

    Then go to backend folder and run docker build -t rtt-backend . 

    Then create docker-compose file attached with PR.

    Run docker-compose up 
    
    And visit localhost

